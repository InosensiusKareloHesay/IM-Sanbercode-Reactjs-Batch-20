[{"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\index.js":"1","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\reportWebVitals.js":"2","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\App.js":"3","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Context\\UserContext.js":"4","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\LandingPage.js":"5","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\Home.js":"6","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\Routes.js":"7","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\HeaderNav.js":"8","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\FooterLayout.js":"9","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\Login.js":"10","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\Register.js":"11","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\ChangePassword.js":"12","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\DetailMovie.js":"13","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\DetailGames.js":"14","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\GamesCRUD.js":"15","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\MovieCRUD.js":"16","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\MovieList.js":"17","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\GamesList.js":"18","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\CreateMovie.js":"19","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\CreateGames.js":"20","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\EditMovie.js":"21","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\EditGames.js":"22","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\SiderPage.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":300,"mtime":1609760810169,"results":"27","hashOfConfig":"25"},{"size":441,"mtime":1609987563862,"results":"28","hashOfConfig":"25"},{"size":1458,"mtime":1609772879299,"results":"29","hashOfConfig":"25"},{"size":9394,"mtime":1610009525350,"results":"30","hashOfConfig":"25"},{"size":4500,"mtime":1610017801772,"results":"31","hashOfConfig":"25"},{"size":1755,"mtime":1610019663513,"results":"32","hashOfConfig":"25"},{"size":417,"mtime":1609781691375,"results":"33","hashOfConfig":"25"},{"size":2790,"mtime":1609992133218,"results":"34","hashOfConfig":"25"},{"size":3120,"mtime":1609994810693,"results":"35","hashOfConfig":"25"},{"size":3319,"mtime":1609948626496,"results":"36","hashOfConfig":"25"},{"size":3781,"mtime":1609995845021,"results":"37","hashOfConfig":"25"},{"size":3491,"mtime":1609996057215,"results":"38","hashOfConfig":"25"},{"size":9716,"mtime":1610020872143,"results":"39","hashOfConfig":"25"},{"size":9729,"mtime":1610020574283,"results":"40","hashOfConfig":"25"},{"size":2809,"mtime":1609965813104,"results":"41","hashOfConfig":"25"},{"size":2831,"mtime":1609966792744,"results":"42","hashOfConfig":"25"},{"size":7312,"mtime":1610010475314,"results":"43","hashOfConfig":"25"},{"size":7461,"mtime":1610011944351,"results":"44","hashOfConfig":"25"},{"size":8654,"mtime":1610011700759,"results":"45","hashOfConfig":"25"},{"size":8748,"mtime":1610011924140,"results":"46","hashOfConfig":"25"},{"size":2879,"mtime":1610020492238,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1deg3o5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\index.js",[],["103","104"],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\reportWebVitals.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\App.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Context\\UserContext.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\LandingPage.js",["105"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport '../Assets/css/style.css'\r\nimport bgLanding from '../Assets/img/bg-landing.jpg'\r\nimport { Layout, Button } from 'antd';\r\nimport {\r\n    CaretDownOutlined\r\n  } from '@ant-design/icons';\r\n\r\nconst { Content } = Layout;\r\n\r\nfunction LandingPage(){\r\n    return(\r\n        <>\r\n        <Content>\r\n            <div className=\"site-layout-content\">\r\n                <img className=\"imgLanding\" src={bgLanding} />\r\n                    <div className=\"textLanding\">\r\n                        <p style={{marginTop: \"60px\",marginBottom: \"0px\", paddingLeft: \"50px\", fontSize: \"80px\", color: \"white\"}}>Enjoy your time</p>\r\n                        <p style={{paddingLeft: \"50px\", marginBottom: \"20px\", fontSize: \"80px\", color: \"white\"}}>with latest <strong style={{color: \"#FFB900\"}}><u>MOVIE</u></strong> and <strong style={{color: \"#FFB900\"}}><u>GAMES</u></strong></p>\r\n                        <Link to='/home'>\r\n                            <Button size=\"large\" className=\"btn-center\" style={{color: \"white\", marginTop: \"5%\", backgroundColor: \"black\"}}>\r\n                                <CaretDownOutlined/> <strong style={{marginLeft: \"10px\",marginRight: \"10px\"}}>GET STARTED</strong> <CaretDownOutlined/>\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n            </div>\r\n        </Content>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\Home.js",["106","107","108","109"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport cthImg from '../Assets/img/tes.jpg'\r\nimport { Layout , Card, Col, Row, Carousel , Tabs } from 'antd';\r\n\r\nconst { Content } = Layout;\r\nconst { TabPane } = Tabs;\r\nconst { Meta } = Card;\r\n\r\nconst contentStyle = {\r\n    height: '300px',\r\n    color: 'white',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nconst Home = () => {\r\n\r\n    const [movie, setMovie] =  useState(null)\r\n    const [games, setGames] =  useState(null)\r\n    const [topReleaseMovie, setTopReleaseMovie] =  useState(null)\r\n    const [topReleaseGames, setTopReleaseGames] =  useState(null)\r\n\r\n    useEffect( () => {\r\n        if (movie === null){\r\n          axios.get(`https://backendexample.sanbersy.com/api/data-movie`)\r\n          .then(res => {\r\n                const dataMovieAll = res.data\r\n                const topFourMovie = dataMovieAll.sort(handleCompareMovie).slice(0,4)\r\n                setTopReleaseMovie(topFourMovie.length)\r\n                setMovie(topFourMovie.map(el=>{ return {\r\n                    id: el.id,\r\n                    title: el.title,\r\n                    description: el.description,\r\n                    genre: el.genre,\r\n                    rating: el.rating,\r\n                    duration: el.duration,\r\n                    year: el.year,\r\n                    review: el.review,\r\n                    image_url: el.image_url\r\n                }\r\n                }))\r\n          })\r\n        }\r\n      }, [movie])\r\n\r\n    useEffect( () => {\r\n        if (games === null){\r\n          axios.get(`https://backendexample.sanbersy.com/api/data-game`)\r\n          .then(res => {\r\n                const dataGamesAll = res.data\r\n                const topFourGames = dataGamesAll.sort(handleCompareGames).slice(0,4)\r\n                setTopReleaseGames(topFourGames.length)\r\n                setGames(topFourGames.map(el=>{ return {\r\n                    id: el.id,\r\n                    name: el.name,\r\n                    genre: el.genre,\r\n                    release: el.release,\r\n                    platform: el.platform,\r\n                    singlePlayer: el.singlePlayer,\r\n                    multiplayer: el.multiplayer,\r\n                    image_url: el.image_url\r\n                }\r\n                }))\r\n          })\r\n        }\r\n      }, [games])\r\n\r\n      const handleCompareMovie = (a, b) => {\r\n        const bandA = a.year;\r\n        const bandB = b.year;\r\n      \r\n        let comparison = 0;\r\n        if (bandA > bandB) {\r\n          comparison = 1;\r\n        } else if (bandA < bandB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison * -1;\r\n      }\r\n\r\n      const handleCompareGames = (a, b) => {\r\n        const bandA = a.release;\r\n        const bandB = b.release;\r\n      \r\n        let comparison = 0;\r\n        if (bandA > bandB) {\r\n          comparison = 1;\r\n        } else if (bandA < bandB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison * -1;\r\n      }\r\n\r\n      const handleTruncateString = (str, num) => {\r\n        if (str === null){\r\n          return \"\"\r\n        }else{\r\n          if (str.length <= num) {\r\n            return str\r\n          }\r\n          return str.slice(0, num) + '...'\r\n        }\r\n      }\r\n\r\n        return(\r\n            <Content style={{backgroundColor: \"#FFB900\"}}>\r\n                <div className=\"site-layout-content\" style={{padding: \"20px 50px\"}}>\r\n                    <Tabs type=\"card\" defaultActiveKey=\"1\" tabBarStyle={{color: 'black'}}>\r\n                        <TabPane tab=\"Movie\" key=\"1\">\r\n                            <Carousel autoplay>\r\n                                {\r\n                                    movie !== null && movie.map((item)=>{\r\n                                        return(\r\n                                            <>\r\n                                                <div>\r\n                                                    <img alt=\"example\" src={item.image_url} style={{width: \"100%\", height: \"300px\", objectFit: \"cover\"}}/>\r\n                                                    <p style={{fontSize:\"20px\",height:\"50px\",paddingTop: \"5px\",textAlign:\"center\", backgroundColor:\"#BC750B\"}}><strong>{item.title}</strong></p>\r\n                                                </div>\r\n                                                </>\r\n                                        )})\r\n                                }\r\n                            </Carousel>\r\n                                <h1>Top {topReleaseMovie} Latest Release Movie</h1>\r\n                            <div className=\"site-card-wrapper\">\r\n                                <Row gutter={16}>\r\n                                    {movie !== null && movie.map((item)=>{\r\n                                        let url = '/detail-movie/'+item.id\r\n                                        return(\r\n                                            <Col span={6}>\r\n                                                <Card\r\n                                                    href=\"/detail-movie\"\r\n                                                    // onClick='/detail-movie'\r\n                                                    hoverable\r\n                                                    style={{ width: 200 }}\r\n                                                    cover={\r\n                                                        <img alt=\"Movie Image\" src={item.image_url} style={{margin: \"10px auto\", width: \"180px\" , height: \"200px\"}}/>\r\n                                                        \r\n                                                    }\r\n                                                >\r\n                                                    \r\n                                                    <Meta title={\"(\"+item.year+\") \"+item.title} description={handleTruncateString(item.description,15)} />\r\n                                                    <br />\r\n                                                    <Link to={url} style={{color: \"#A77822\"}}>\r\n                                                        <strong>More Info...</strong>\r\n                                                    </Link>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        )})\r\n                                    }\r\n                                </Row>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Games\" key=\"2\">\r\n                            <Carousel autoplay>\r\n                                {\r\n                                    games !== null && games.map((item)=>{\r\n                                        return(\r\n                                            <>\r\n                                                <div>\r\n                                                    <img alt=\"example\" src={item.image_url} style={{width: \"100%\", height: \"300px\", objectFit: \"cover\"}}/>\r\n                                                    <p style={{fontSize:\"20px\",height:\"50px\",paddingTop: \"5px\",textAlign:\"center\", backgroundColor:\"#BC750B\"}}><strong>{item.name}</strong></p>\r\n                                                </div>\r\n                                                </>\r\n                                        )})\r\n                                }\r\n                            </Carousel>\r\n                            \r\n                            <h1>Top {topReleaseGames} Latest Release Games</h1>\r\n                            \r\n                            <div className=\"site-card-wrapper\">\r\n                            <Row gutter={16}>\r\n                                    {games !== null && games.map((item)=>{\r\n                                        let url = '/detail-games/'+item.id\r\n                                        return(\r\n                                            <Col span={6}>\r\n                                                <Card\r\n                                                    hoverable\r\n                                                    style={{ width: 200 }}\r\n                                                    cover={\r\n                                                        <img alt=\"Movie Image\" src={item.image_url} style={{margin: \"10px auto\", width: \"180px\" , height: \"200px\"}}/>\r\n                                                    }\r\n                                                >\r\n                                                    <Meta title={\"(\"+item.release+\") \"+item.name} description={handleTruncateString(item.platform,15)} />\r\n                                                    <br />\r\n                                                    <Link to={url} style={{color: \"#A77822\"}}>\r\n                                                        <strong>More Info...</strong>\r\n                                                    </Link>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        )})\r\n                                    }\r\n                                </Row>\r\n                            </div>\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            </Content>\r\n        )\r\n}\r\n\r\nexport default Home;","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\Routes.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\HeaderNav.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\FooterLayout.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\Login.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\Register.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\ChangePassword.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\DetailMovie.js",["110","111","112","113","114"],"import React, { useState , useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { Layout } from 'antd';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst DetailMovie = () => {\r\n\r\n    let { id } = useParams();\r\n    const [currentID, setCurrentID] = useState(null)\r\n    const [movie, setMovie] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        genre: \"\",\r\n        rating: 0,\r\n        duration: 0,\r\n        year: 1000,\r\n        review: \"\",\r\n        image_url: \"\"\r\n    })\r\n\r\n    useEffect( () => {\r\n        if (currentID === null){\r\n          axios.get(`https://backendexample.sanbersy.com/api/data-movie/${id}`)\r\n          .then(res => {\r\n                let data = res.data\r\n                setMovie({\r\n                    title: data.title,\r\n                    description: data.description,\r\n                    genre: data.genre,\r\n                    rating: data.rating,\r\n                    duration: data.duration,\r\n                    year: data.year,\r\n                    review: data.review,\r\n                    image_url: data.image_url\r\n                })\r\n                setCurrentID(id)\r\n          })\r\n        }\r\n      }, [currentID, setCurrentID])\r\n\r\n      const handleConvertMinute = (minute) =>{\r\n        const jam = parseInt(minute /60)\r\n        const menit = minute % (jam*60)\r\n        if (jam === 0){\r\n            return menit+\" menit\"\r\n        }else{\r\n            return jam+\" jam \"+menit+\" menit\"\r\n        }\r\n      }\r\n\r\n        return(\r\n            <Content style={{backgroundColor: \"#FFB900\"}}>\r\n                <div className=\"site-layout-content\" style={{padding: \"28px 20px\"}}>\r\n                    <h1><strong>Detail Movie</strong></h1>\r\n                    <div style={{display: \"inline-block\"}}>\r\n                    {\r\n                        <>\r\n                        \r\n                                <div style={{float: \"left\", display: \"inline-block\",marginRight:\"20px\"}}>\r\n                                    <img src={movie.image_url} alt=\"Image\" style={{width:\"250px\",height:\"400px\", objectFit: \"cover\"}}/>\r\n                                </div>\r\n                                <div style={{marginLeft: \"50px\", top: 0}}>\r\n                                    <p style={{fontSize: \"30px\",marginBottom: \"0px\"}}><strong>{movie.title}<a style={{color: \"#9c6006\"}}>&nbsp;({movie.year})</a></strong></p>\r\n                                    <p style={{fontSize: \"20px\",marginBottom: \"0px\"}}><strong>Rating : </strong> <a style={{color: \"#9c6006\"}}>{movie.rating}</a></p>\r\n                                    <p style={{fontSize: \"20px\",marginBottom: \"0px\"}}><strong>Genre :</strong> <a style={{color: \"#9c6006\"}}>{movie.genre}</a></p>\r\n                                    <p style={{fontSize: \"20px\",marginBottom: \"0px\",color: \"#9c6006\"}}><ClockCircleOutlined style={{color: \"black\"}}/>&nbsp;&nbsp;{handleConvertMinute(movie.duration)}</p>\r\n                                </div>\r\n                                <br />\r\n                                    <p style={{fontSize: \"20px\",marginBottom: \"0px\"}}><strong>Description</strong></p>\r\n                                    <p style={{fontSize: \"15px\",marginBottom: \"0px\",marginLeft: \"20px\",color: \"#9c6006\"}}>{movie.description}</p>\r\n                                    <p style={{fontSize: \"20px\",marginBottom: \"0px\"}}><strong>Reviews</strong></p>\r\n                                    <p style={{fontSize: \"15px\",marginBottom: \"0px\",marginLeft: \"20px\",color: \"#9c6006\"}}>{movie.review}</p>\r\n                        </>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </Content>\r\n        )\r\n\r\n}\r\n\r\nexport default DetailMovie","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\DetailGames.js",["115","116","117","118"],"import React, { useState , useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { Layout } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst DetailGames = () => {\r\n\r\n    let { id } = useParams();\r\n    const [currentID, setCurrentID] = useState(null)\r\n    const [games, setGames] = useState({\r\n        name: \"\",\r\n        genre: \"\",\r\n        release: 1000,\r\n        platform: \"\",\r\n        singlePlayer: false,\r\n        multiplayer: true,\r\n        image_url: \"\"\r\n    })\r\n\r\n    useEffect( () => {\r\n        if (currentID === null){\r\n          axios.get(`https://backendexample.sanbersy.com/api/data-game/${id}`)\r\n          .then(res => {\r\n                let data = res.data\r\n                setGames({\r\n                    name: data.name,\r\n                    genre: data.genre,\r\n                    release: data.release,\r\n                    platform: data.platform,\r\n                    singlePlayer: data.singlePlayer,\r\n                    multiplayer: data.multiplayer,\r\n                    image_url: data.image_url\r\n                })\r\n                setCurrentID(id)\r\n          })\r\n        }\r\n      }, [currentID, setCurrentID])\r\n\r\n    const handleCekPlayer = (kondisi,cek) => {\r\n        if(kondisi){\r\n            if(cek===\"single\"){\r\n                return <li >SinglePlayer</li>\r\n            }else {\r\n                return <li >MultiPlayer</li>\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Content style={{backgroundColor: \"#FFB900\"}}>\r\n            <div className=\"site-layout-content\" style={{padding: \"28px 20px\"}}>\r\n                <h1><strong>Detail Games</strong></h1>\r\n                <div >\r\n                {\r\n                    <>\r\n                            <div style={{paddingBottom: \"25px\", float: \"left\", display: \"inline-block\",marginRight:\"20px\"}}>\r\n                                <img src={games.image_url} alt=\"Image\" style={{width:\"250px\",height:\"400px\", objectFit: \"cover\"}}/>\r\n                            </div>\r\n                            <div style={{marginLeft: \"50px\", top: 0}}>\r\n                                <p style={{fontSize: \"30px\",marginBottom: \"0px\"}}><strong>{games.name}<a style={{color: \"#9c6006\"}}>&nbsp;({games.release})</a></strong></p>\r\n                                <p style={{fontSize: \"20px\",marginBottom: \"0px\"}}><strong>Genre :</strong> <a style={{color: \"#9c6006\"}}>{games.genre}</a></p>\r\n                                <br/>\r\n                                <p style={{fontSize: \"20px\",marginBottom: \"0px\",color: \"black\"}}><UserOutlined style={{color: \"black\"}}/>&nbsp;&nbsp;Player</p>\r\n                                <ul style={{listStylePosition: \"inside\",fontSize: \"12px\",marginBottom: \"0px\",color: \"#9c6006\"}}>\r\n                                    {handleCekPlayer(games.singlePlayer,\"single\")}\r\n                                    {handleCekPlayer(games.multiplayer,\"multi\")}\r\n                                </ul>\r\n                                <br/>\r\n                                <p style={{fontSize: \"20px\",marginBottom: \"0px\"}}><strong>Platform</strong></p>\r\n                                <p style={{fontSize: \"12px\",marginBottom: \"0px\",marginLeft: \"20px\",color: \"#9c6006\"}}>{games.platform}</p>\r\n                            </div>\r\n                    </>\r\n                }\r\n                </div>\r\n            </div>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default DetailGames","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\GamesCRUD.js",["119","120","121","122","123"],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\MovieCRUD.js",["124","125"],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\MovieList.js",["126"],"import React, {Component} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout , Card , Row , Col } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\n\r\nclass MovieList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            movie: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://backendexample.sanbersy.com/api/data-movie`)\r\n        .then(res => {\r\n            let movie = res.data.map(el => {\r\n                return{\r\n                    id: el.id,\r\n                    title: el.title,\r\n                    description: el.description,\r\n                    genre: el.genre,\r\n                    rating: el.rating,\r\n                    duration: el.duration,\r\n                    year: el.year,\r\n                    review: el.review,\r\n                    image_url: el.image_url\r\n                }})\r\n            this.setState({movie})\r\n        })\r\n    }\r\n\r\n    truncateString = (str, num) => {\r\n        if (str === null){\r\n          return \"\"\r\n        }else{\r\n          if (str.length <= num) {\r\n            return str\r\n          }\r\n          return str.slice(0, num) + '...'\r\n        }\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <Content style={{backgroundColor: \"#FFB900\"}}>\r\n                <div className=\"site-layout-content\" style={{padding: \"20px 50px\"}}>\r\n                    <Row gutter={16}>\r\n                        {this.state.movie.map((item)=>{\r\n                            let url = '/detail-movie/'+item.id\r\n                            return(\r\n                                <Col span={6} style={{marginTop:\"20px\"}}>\r\n                                    <Card\r\n                                        hoverable\r\n                                        style={{ width: 200 ,backgroundColor:\"#BC750B\"}}\r\n                                        cover={\r\n                                        <img alt=\"Movie Image\" src={item.image_url} style={{margin: \"10px auto\", width: \"180px\" , height: \"200px\"}}/>\r\n                                        }\r\n                                    >\r\n                                        <Meta title={item.title} description={this.truncateString(item.description, 20)} />\r\n                                        <br />\r\n                                        <Link to={url} style={{color: \"white\"}}>\r\n                                            <strong>More Info...</strong>\r\n                                        </Link>\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList;","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\GamesList.js",["127"],"import React, {Component} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout , Card , Row , Col } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\n\r\nclass GamesList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            games: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://backendexample.sanbersy.com/api/data-game`)\r\n        .then(res => {\r\n            let games = res.data.map(el => {\r\n                return{\r\n                    id: el.id,\r\n                    name: el.name,\r\n                    genre: el.genre,\r\n                    release: el.release,\r\n                    platform: el.platform,\r\n                    singlePlayer: el.singlePlayer,\r\n                    multiplayer: el.multiplayer,\r\n                    image_url: el.image_url\r\n                }})\r\n            this.setState({games})\r\n        })\r\n    }\r\n\r\n    truncateString(str, num){\r\n        if (str === null){\r\n          return \"\"\r\n        }else{\r\n          if (str.length <= num) {\r\n            return str\r\n          }\r\n          return str.slice(0, num) + '...'\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Content style={{backgroundColor: \"#FFB900\"}}>\r\n                <div className=\"site-layout-content\" style={{padding: \"20px 50px\"}}>\r\n                    <Row gutter={16}>\r\n                        {this.state.games.map((item)=>{\r\n                            let url = '/detail-games/'+item.id\r\n                            return(\r\n                                    <Col span={6} style={{marginTop:\"20px\"}}>\r\n                                        <Card\r\n                                            hoverable\r\n                                            style={{ width: 200 ,backgroundColor:\"#BC750B\"}}\r\n                                            cover={\r\n                                            <img alt=\"Games Image\" src={item.image_url} style={{margin: \"10px auto\", width: \"180px\" , height: \"200px\"}}/>\r\n                                            }\r\n                                        >\r\n                                            <Meta title={item.name} description={this.truncateString(item.platform, 20)} />\r\n                                            <br />\r\n                                            <Link to={url} style={{color: \"white\"}}>\r\n                                                <strong>More Info...</strong>\r\n                                            </Link>\r\n                                        </Card>\r\n                                    </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesList;","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\CreateMovie.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\CreateGames.js",[],"D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\EditMovie.js",["128"],"import React, { useState , useEffect , useContext } from 'react';\r\nimport axios from 'axios'\r\nimport { Layout , Button , Input , Form , InputNumber , Rate , Select } from 'antd';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\nimport {UserContext} from '../Context/UserContext'\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\n\r\nconst EditMovie = () => {\r\n\r\n    const [user] = useContext(UserContext)\r\n    const [form] = Form.useForm();\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const [currentID, setCurrentID] = useState(null)\r\n    const [input,setInput] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        genre: \"\",\r\n        rating: 0,\r\n        duration: 0,\r\n        year: 1000,\r\n        review: \"\",\r\n        image_url: \"\"\r\n    })\r\n\r\n    const layout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 20 },\r\n      };\r\n    \r\n      const tailLayout = {\r\n        wrapperCol: { offset: 4, span: 16 },\r\n      };\r\n    \r\n      const allGenre = ['Action','Adventure','Animation','Anime','Comedy','Drama','Horror','Inspiration','Romance','Sci-Fi','Thriller'];\r\n      const menuGenre =[]\r\n      for (let i = 0; i < allGenre.length; i++) {\r\n        menuGenre.push(<Option key={allGenre[i]}>{allGenre[i]}</Option>);\r\n      }\r\n    \r\n    useEffect( () => {\r\n        if (currentID === null){\r\n          axios.get(`https://backendexample.sanbersy.com/api/data-movie/${id}`)\r\n          .then(res => {\r\n                let data = res.data\r\n                setInput({\r\n                    title: data.title,\r\n                    description: data.description,\r\n                    genre: data.genre,\r\n                    rating: data.rating,\r\n                    duration: data.duration,\r\n                    year: data.year,\r\n                    review: data.review,\r\n                    image_url: data.image_url\r\n                })\r\n                setCurrentID(id)\r\n                form.setFieldsValue({\r\n                    title: data.title,\r\n                    description: data.description,\r\n                    genre: data.genre,\r\n                    rating: data.rating,\r\n                    duration: data.duration,\r\n                    year: data.year,\r\n                    review: data.review,\r\n                    image_url: data.image_url\r\n              })\r\n          })\r\n        }\r\n      }, [currentID, setCurrentID])\r\n      \r\n    const handleSubmit = (event) => {\r\n        axios.put(`https://backendexample.sanbersy.com/api/data-movie/${currentID}`, {\r\n            title: input.title,description: input.description,genre: input.genre.join(\", \"),rating: input.rating,duration: input.duration,year: input.year,review: input.review,image_url: input.image_url\r\n            },{headers: {\"Authorization\" : `Bearer ${user.token}`}})\r\n            .then(() => {\r\n                setCurrentID(null)\r\n                setInput({title: \"\",\r\n                description: \"\",\r\n                genre: \"\",\r\n                rating: 0,\r\n                duration: 0,\r\n                year: 1000,\r\n                review: \"\",\r\n                image_url: \"\"})\r\n                history.push('/movie-crud')\r\n            })\r\n            setCurrentID(null)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value\r\n\r\n        if (event.target.id === \"title\"){\r\n            setInput({...input,title:value});\r\n        }else if(event.target.id === \"description\"){\r\n            setInput({...input,description:value});\r\n        }else if(event.target.id === \"review\"){\r\n            setInput({...input,review:value});\r\n        }else if(event.target.id === \"image_url\"){\r\n            setInput({...input,image_url:value});\r\n        }\r\n    }\r\n\r\n    const handleChangeGenre = (event) => {\r\n        setInput({...input,genre:event});\r\n    }\r\n\r\n    const handleChangeRating = (event) => {\r\n        setInput({...input,rating:event});\r\n    }\r\n    \r\n    const handleChangeDuration = (event) => {\r\n        setInput({...input,duration:event});\r\n    }\r\n\r\n    const handleChangeYear = (event) => {\r\n        setInput({...input,year:event});\r\n    }\r\n\r\n    return(\r\n        \r\n        <Content style={{backgroundColor: \"#FFB900\"}}>\r\n            <div style={{padding: \"20px\"}}>\r\n                <p style={{fontSize: \"20px\", float:\"left\"}}><PlusSquareOutlined />&nbsp;&nbsp;<strong>Edit Movie</strong></p>\r\n                <div style={{backgroundColor: \"#e9ab08\",margin: \"50px auto\", width: \"1200px\",height: \"650px\", padding: \"38px\", border: \"5px solid #BC750B\"}}>\r\n                    <Form\r\n                        form={form}\r\n                        {...layout}\r\n                        onFinish={handleSubmit}\r\n                        >\r\n                        <Form.Item\r\n                        label=\"Movie Title\"\r\n                        name=\"title\"\r\n                        rules={[{ required: true, message: 'Please input movie title!' }]}\r\n                        >\r\n                        <Input placeholder=\"Input movie title...\" onChange={handleChange}/>\r\n                            \r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Description\"\r\n                        name=\"description\"\r\n                        \r\n                        rules={[{ required: true, message: 'Please input a description!' }]}\r\n                        >\r\n                        <TextArea placeholder=\"Description...\" rows={3} onChange={handleChange}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Genre\"\r\n                        name=\"genre\"\r\n                        rules={[{ required: true, message: 'Please input a genre!' }]}\r\n                        >\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            name=\"genre\"\r\n                            allowClear\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"Select movie genre...\"\r\n                            onChange={handleChangeGenre}\r\n                            >\r\n                            {menuGenre}\r\n                        </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Rating\"\r\n                        name=\"rating\"\r\n                        rules={[{ required: true, message: 'Please input a rating!' }]}\r\n                        >\r\n                        <Rate name=\"rating\" style={{color: \"#BC750B\"}} count=\"10\" onChange={handleChangeRating}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Duration (In Minutes)\"\r\n                        name=\"duration\"\r\n                        rules={[{ required: true, message: 'Please input a movie duration!' }]}\r\n                        >\r\n                        <InputNumber name=\"duration\" min={0} max={1000000} defaultValue={1} onChange={handleChangeDuration}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Release Year\"\r\n                        name=\"year\"\r\n                        rules={[{ required: true, message: 'Please input a release year!' }]}\r\n                        >\r\n                        <InputNumber name=\"year\" min={1000} max={2100} defaultValue={1000} onChange={handleChangeYear}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Review\"\r\n                        name=\"review\"\r\n                        rules={[{ required: true, message: 'Please input a review!' }]}\r\n                        >\r\n                        <TextArea placeholder=\"Review...\" rows={3} onChange={handleChange}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Image Url\"\r\n                        name=\"image_url\"\r\n                        rules={[{ required: true, message: 'Please input an image url!' }]}\r\n                        >\r\n                        <Input placeholder=\"Image Url...\" onChange={handleChange}/>\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default EditMovie","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Pages\\EditGames.js",["129"],"import React, { useState , useEffect , useContext } from 'react';\r\nimport axios from 'axios'\r\nimport { Layout , Button , Input , Form , InputNumber , Checkbox , Select} from 'antd';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\nimport {UserContext} from '../Context/UserContext'\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\n\r\n\r\nconst EditGames = () => {\r\n\r\n    const [user] = useContext(UserContext)\r\n    const [form] = Form.useForm();\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const [currentID, setCurrentID] = useState(null)\r\n    const [input,setInput] = useState({\r\n        name: \"\",\r\n        genre: \"\",\r\n        release: 1000,\r\n        platform: \"\",\r\n        singlePlayer: false,\r\n        multiplayer: false,\r\n        image_url: \"\"\r\n    })\r\n\r\n    const layout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 20 },\r\n      };\r\n      \r\n      const tailLayout = {\r\n        wrapperCol: { offset: 4, span: 16 },\r\n      };\r\n      \r\n      const allGenre = ['Action','Adventure','Horor','Third-person shooter','Battle Royale','Sport'];\r\n      const menuGenre =[]\r\n      for (let i = 0; i < allGenre.length; i++) {\r\n        menuGenre.push(<Option key={allGenre[i]}>{allGenre[i]}</Option>);\r\n      }\r\n    \r\n      const allPlatform = ['Nintendo','Sega','PC','Xbox','Xbox One','Xbox 360','Xbox Series X','Playstation 4','PlayStation 3','PlayStation','Windows','Linux','IOS'];\r\n      const menuPlatform =[]\r\n      for (let i = 0; i < allPlatform.length; i++) {\r\n        menuPlatform.push(<Option key={allPlatform[i]}>{allPlatform[i]}</Option>);\r\n      }\r\n\r\n      useEffect( () => {\r\n        if (currentID === null){\r\n          axios.get(`https://backendexample.sanbersy.com/api/data-game/${id}`)\r\n          .then(res => {\r\n                let data = res.data\r\n                setInput({\r\n                    name: data.name,\r\n                    genre: data.genre,\r\n                    release: data.release,\r\n                    platform: data.platform,\r\n                    singlePlayer: data.singlePlayer,\r\n                    multiplayer: data.multiplayer,\r\n                    image_url: data.image_url\r\n                })\r\n                setCurrentID(id)\r\n                form.setFieldsValue({\r\n                    name: data.name,\r\n                    genre: data.genre,\r\n                    release: data.release,\r\n                    platform: data.platform,\r\n                    singlePlayer: data.singlePlayer,\r\n                    multiplayer: data.multiplayer,\r\n                    image_url: data.image_url\r\n              })\r\n          })\r\n        }\r\n      }, [currentID, setCurrentID])\r\n      \r\n    const handleSubmit = (event) => {\r\n        let single = 0\r\n        let multi = 0\r\n        if(input.singlePlayer){\r\n            single = 1\r\n        }\r\n        if(input.multiplayer){\r\n             multi = 1\r\n        }\r\n        console.log(input.singlePlayer)\r\n        console.log(input.multiplayer)\r\n        console.log(input)\r\n        console.log(multi)\r\n        axios.put(`https://backendexample.sanbersy.com/api/data-game/${currentID}`, {\r\n            name: input.name,genre: input.genre.toString(),release: input.release,platform: input.platform.toString(),singlePlayer: single,multiplayer: multi,image_url: input.image_url\r\n        },{headers: {\"Authorization\" : `Bearer ${user.token}`}})\r\n            .then(() => {\r\n                setCurrentID(null)\r\n                setInput({name: \"\",\r\n                genre: \"\",\r\n                release: 1000,\r\n                platform: \"\",\r\n                singlePlayer: false,\r\n                multiplayer: false,\r\n                image_url: \"\"})\r\n                history.push('/games-crud')\r\n            })\r\n            setCurrentID(null)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value\r\n\r\n        if (event.target.id === \"name\"){\r\n            setInput({...input,name:value});\r\n        }else if(event.target.id === \"image_url\"){\r\n            setInput({...input,image_url:value});\r\n        }\r\n    }\r\n\r\n    const handleChangeGenre = (event) => {\r\n            setInput({...input,genre:event});\r\n    }\r\n\r\n    const handleChangePlatform = (event) => {\r\n        setInput({...input,platform:event});\r\n    }\r\n\r\n    const handleChangeRelease = (event) => {\r\n        setInput({...input,release:event});\r\n    }\r\n\r\n    const handleChangePlayer = (event) => {\r\n        let value = event.target.checked\r\n        console.log(value)\r\n        console.log(event.target)\r\n        if (event.target.name === \"singlePlayer\"){\r\n            setInput({...input,singlePlayer:value});\r\n        }else if(event.target.name === \"multiplayer\"){\r\n            setInput({...input,multiplayer:value});\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Content style={{backgroundColor: \"#FFB900\"}}>\r\n            <div style={{padding: \"20px\"}}>\r\n                <p style={{fontSize: \"20px\", float:\"left\"}}><PlusSquareOutlined />&nbsp;&nbsp;<strong>Edit Games</strong></p>\r\n                <div style={{backgroundColor: \"#e9ab08\",margin: \"50px auto\", width: \"1200px\",height: \"500px\", padding: \"38px\", border: \"5px solid #BC750B\"}}>\r\n                    <Form\r\n                        form={form}\r\n                        {...layout}\r\n                        onFinish={handleSubmit}\r\n                        >\r\n                        <Form.Item\r\n                        label=\"Games Name\"\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: 'Please input games name!' }]}\r\n                        >\r\n                        <Input placeholder=\"Input games name...\" onChange={handleChange}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Genre\"\r\n                        name=\"genre\"\r\n                        rules={[{ required: true, message: 'Please input a genre!' }]}\r\n                        >\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            allowClear\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"Select games genre...\"\r\n                            onChange={handleChangeGenre}\r\n                            >\r\n                            {menuGenre}\r\n                        </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Release Year\"\r\n                        name=\"release\"\r\n                        rules={[{ required: true, message: 'Please input a release year!' }]}\r\n                        >\r\n                        <InputNumber min={1000} max={2100} defaultValue={1000} onChange={handleChangeRelease}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Platform\"\r\n                        name=\"platform\"\r\n                        rules={[{ required: true, message: 'Please input a platform!' }]}\r\n                        >\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            allowClear\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"Select games platform...\"\r\n                            onChange={handleChangePlatform}\r\n                            >\r\n                            {menuPlatform}\r\n                        </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Player\"\r\n                        name=\"player\"\r\n                        rules={[{message: 'Please input a player!' }]}\r\n                        >\r\n                        <Checkbox name=\"singlePlayer\" onChange={handleChangePlayer}>Single Player</Checkbox>\r\n                        <Checkbox name=\"multiplayer\" onChange={handleChangePlayer}>Multi Player</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                        label=\"Image Url\"\r\n                        name=\"image_url\"\r\n                        rules={[{ required: true, message: 'Please input an image url!' }]}\r\n                        >\r\n                        <Input placeholder=\"Image Url...\" onChange={handleChange}/>\r\n                        </Form.Item>\r\n                        \r\n\r\n                        <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default EditGames","D:\\Kampus\\Belajar\\Sanbercode-ReactJs\\Day1\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\src\\Layout\\SiderPage.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":17,"column":17,"nodeType":"136","endLine":17,"endColumn":63},{"ruleId":"137","severity":1,"message":"138","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"137","severity":1,"message":"141","line":11,"column":7,"nodeType":"139","messageId":"140","endLine":11,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":139,"column":57,"nodeType":"136","endLine":139,"endColumn":166},{"ruleId":"142","severity":1,"message":"143","line":183,"column":57,"nodeType":"136","endLine":183,"endColumn":166},{"ruleId":"144","severity":1,"message":"145","line":44,"column":10,"nodeType":"146","endLine":44,"endColumn":35,"suggestions":"147"},{"ruleId":"142","severity":1,"message":"143","line":65,"column":37,"nodeType":"136","endLine":65,"endColumn":136},{"ruleId":"148","severity":1,"message":"149","line":68,"column":108,"nodeType":"136","endLine":68,"endColumn":138},{"ruleId":"148","severity":1,"message":"149","line":69,"column":114,"nodeType":"136","endLine":69,"endColumn":144},{"ruleId":"148","severity":1,"message":"149","line":70,"column":112,"nodeType":"136","endLine":70,"endColumn":142},{"ruleId":"144","severity":1,"message":"145","line":42,"column":10,"nodeType":"146","endLine":42,"endColumn":35,"suggestions":"150"},{"ruleId":"142","severity":1,"message":"143","line":62,"column":33,"nodeType":"136","endLine":62,"endColumn":132},{"ruleId":"148","severity":1,"message":"149","line":65,"column":103,"nodeType":"136","endLine":65,"endColumn":133},{"ruleId":"148","severity":1,"message":"149","line":66,"column":108,"nodeType":"136","endLine":66,"endColumn":138},{"ruleId":"137","severity":1,"message":"151","line":4,"column":36,"nodeType":"139","messageId":"140","endLine":4,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":132,"column":15,"nodeType":"136","endLine":132,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":179,"column":55,"nodeType":"154","messageId":"155","endLine":179,"endColumn":57},{"ruleId":"152","severity":1,"message":"153","line":220,"column":60,"nodeType":"154","messageId":"155","endLine":220,"endColumn":62},{"ruleId":"152","severity":1,"message":"153","line":235,"column":59,"nodeType":"154","messageId":"155","endLine":235,"endColumn":61},{"ruleId":"137","severity":1,"message":"151","line":4,"column":36,"nodeType":"139","messageId":"140","endLine":4,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":131,"column":15,"nodeType":"136","endLine":131,"endColumn":94},{"ruleId":"142","severity":1,"message":"143","line":60,"column":41,"nodeType":"136","endLine":60,"endColumn":150},{"ruleId":"142","severity":1,"message":"143","line":59,"column":45,"nodeType":"136","endLine":59,"endColumn":154},{"ruleId":"144","severity":1,"message":"156","line":76,"column":10,"nodeType":"146","endLine":76,"endColumn":35,"suggestions":"157"},{"ruleId":"144","severity":1,"message":"156","line":80,"column":10,"nodeType":"146","endLine":80,"endColumn":35,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'cthImg' is defined but never used.","Identifier","unusedVar","'contentStyle' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["161"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["162"],"'AudioOutlined' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'form' and 'id'. Either include them or remove the dependency array.",["163"],["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},"Update the dependencies array to be: [currentID, id, setCurrentID]",{"range":"171","text":"172"},{"range":"173","text":"172"},"Update the dependencies array to be: [currentID, form, id, setCurrentID]",{"range":"174","text":"175"},{"range":"176","text":"175"},[1265,1290],"[currentID, id, setCurrentID]",[1225,1250],[2472,2497],"[currentID, form, id, setCurrentID]",[2710,2735]]